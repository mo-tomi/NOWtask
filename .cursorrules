# NowTask プロジェクト - Cursor AI ルール

## プロジェクト概要
NowTaskは1日の予定を1本の縦タイムラインで可視化するパーソナルタスクマネージャーです。
段階的開発により、まずUIの完成度を高めてから機能を実装していきます。

## 開発段階
### 段階1（現在）: UI表示のみ
- HTML/CSS でのデザイン完成
- JavaScript での時計・現在時刻ライン更新
- ダミーデータによるタスクカード表示
- alert()によるクリック反応のみ

### 段階2（今後）: 基本機能実装
- localStorage によるデータ永続化
- ドラッグ&ドロップ機能
- タスクの追加・編集・削除

## ファイル構成
```
NOWtask/
├── index.html     # メインHTMLファイル
├── style.css      # 全スタイル定義
├── nowtask.js     # 全JavaScript機能
└── .cursorrules   # このファイル
```

## コーディング規約

### HTML
- セマンティックタグを優先使用
- クラス名は分かりやすく、BEMは使わない
- aria属性でアクセシビリティを確保
- 日本語要素にはlang="ja"を適用

### CSS
- 生CSSのみ使用（Sass/SCSS禁止）
- Flexboxとposition:absoluteを併用
- CSS Gridは補助的に使用
- 外部CSSライブラリ禁止
- コメントで各セクションを明確に区分
- カスタムプロパティ(CSS変数)を積極活用

### JavaScript
- ECMAScript 2021準拠
- 外部ライブラリ禁止（jQuery等）
- インデント: スペース2文字
- 関数には日本語コメント必須
- 段階1では未実装機能は空関数で定義

## デザインシステム

### カラーパレット
```css
:root {
  --primary: #2E8BFF;        /* メインカラー */
  --accent: #FF4C4C;         /* アクセント・危険 */
  --background: #F5F7FA;     /* 背景グリッド */
  --task-normal: #F0F8FF;    /* 通常タスク */
  --task-high: #FFE4B5;      /* 高優先度 */
  --task-urgent: #FFB6C1;    /* 緊急 */
}
```

### タイポグラフィ
- Interフォント必須
- ベースサイズ: 14px
- 行間: 1.4-1.6
- ウェイト: 400(regular), 600(semibold)

### スペーシング
- ベース: 8px単位
- カード内パディング: 8px
- マージン: 10px, 20px
- 角丸: 4px（カード）, 8px（パネル）

## レスポンシブ設計
- ブレークポイント: 768px
- PC: タイムライン600px + サイドバー240px
- モバイル: タイムライン100%幅、サイドバー折りたたみ
- 横スクロール禁止

## タイムライン仕様
- 24時間 = 1440分 = 1440px（1分=1px換算）
- 時刻ラベル: 0:00-23:00（1時間毎）
- 現在時刻ライン: 赤色（#FF4C4C）、2px幅
- グリッド: 1時間毎の薄い水平線

## インタラクション設計
### 段階1（現在）
- クリック時のalert()表示のみ
- ホバー効果: box-shadow変化
- 時計: 1秒毎更新
- 現在時刻ライン: 1分毎更新

### 段階2以降（予定）
- ドラッグ&ドロップ
- アニメーション（0.3s cubic-bezier）
- キーボードショートカット
- ローディング状態

## アクセシビリティ
- コントラスト比 4.5:1以上確保
- キーボード操作対応
- スクリーンリーダー対応
- focus状態の明確な表示

## パフォーマンス要件
- 初期読み込み < 1秒
- 60fps のスムーズなスクロール
- リフロー/リペイントの最小化
- 画像最適化（将来の機能拡張時）

## コメント規約
### JavaScript
```javascript
// メイン機能: 時計表示の更新
function updateClock() {
  // 現在時刻の取得
  const now = new Date();
  // フォーマット処理
  // ...
}
```

### CSS
```css
/* ===== ヘッダーセクション ===== */
.header {
  /* 位置固定: 画面上部に張り付け */
  position: fixed;
  /* 背景色: メインカラー */
  background-color: var(--primary);
}
```

## エラーハンドリング
- try-catch での適切な例外処理
- ユーザーフレンドリーなエラーメッセージ
- コンソールエラーの完全排除
- フォールバック値の設定

## 将来拡張への配慮
- 機能追加しやすいモジュラー構造
- データ構造の統一化
- API連携を想定したインターフェース設計
- 国際化対応の準備

## ブラウザサポート
- Chrome（最新安定版）: 完全サポート
- Safari, Firefox: ベストエフォート
- IE: サポート対象外

## 開発時の注意点
1. 段階1では機能実装より UI完成度を優先
2. すべての変更は段階的に実装
3. レスポンシブ対応は PC/モバイル両方で確認
4. 時刻計算は1分=1px換算を厳守
5. 日本語UI/コメントを維持

## 禁止事項
- 外部ライブラリの追加
- サブフォルダの作成
- 複雑なビルドプロセス
- インラインスタイル（style属性）の多用
- グローバル変数の濫用

## 不要機能（実装禁止）
- **ダークモード**: テーマ切り替え機能は実装しない
- **キーボードショートカット**: 複雑なキーボード操作は実装しない
- **カスタムテーマ**: ユーザーによる色変更機能は実装しない
- **多言語対応**: 日本語のみで開発し、国際化は考慮しない
- **複雑なアニメーション**: 基本的なホバー効果のみに留める 